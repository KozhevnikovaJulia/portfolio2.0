[{"C:\\Incubator\\Progects\\Portfolio2.0\\src\\index.tsx":"1","C:\\Incubator\\Progects\\Portfolio2.0\\src\\redux\\store.ts":"2","C:\\Incubator\\Progects\\Portfolio2.0\\src\\App.tsx":"3","C:\\Incubator\\Progects\\Portfolio2.0\\src\\redux\\newReducer.ts":"4","C:\\Incubator\\Progects\\Portfolio2.0\\src\\HomePage.tsx":"5","C:\\Incubator\\Progects\\Portfolio2.0\\src\\PrivacyPolicyPage.tsx":"6","C:\\Incubator\\Progects\\Portfolio2.0\\src\\contacts\\Contacts.tsx":"7","C:\\Incubator\\Progects\\Portfolio2.0\\src\\header\\Header.tsx":"8","C:\\Incubator\\Progects\\Portfolio2.0\\src\\scills\\Skills.tsx":"9","C:\\Incubator\\Progects\\Portfolio2.0\\src\\main\\Main.tsx":"10","C:\\Incubator\\Progects\\Portfolio2.0\\src\\progects\\Progects.tsx":"11","C:\\Incubator\\Progects\\Portfolio2.0\\src\\experience\\Experience.tsx":"12","C:\\Incubator\\Progects\\Portfolio2.0\\src\\nav\\Nav.tsx":"13","C:\\Incubator\\Progects\\Portfolio2.0\\src\\common\\components\\button\\Button.tsx":"14","C:\\Incubator\\Progects\\Portfolio2.0\\src\\contacts\\ContactForm.tsx":"15","C:\\Incubator\\Progects\\Portfolio2.0\\src\\common\\components\\textBlock\\TextBlock.tsx":"16","C:\\Incubator\\Progects\\Portfolio2.0\\src\\info\\Info.tsx":"17","C:\\Incubator\\Progects\\Portfolio2.0\\src\\scills\\skill\\MySkill.tsx":"18","C:\\Incubator\\Progects\\Portfolio2.0\\src\\progects\\progect\\MyProgect.tsx":"19","C:\\Incubator\\Progects\\Portfolio2.0\\src\\experience\\myExperience\\MyExperience.tsx":"20","C:\\Incubator\\Progects\\Portfolio2.0\\src\\menu\\Menu.tsx":"21","C:\\Incubator\\Progects\\Portfolio2.0\\src\\common\\components\\inputContactForm\\InputContactForm.tsx":"22","C:\\Incubator\\Progects\\Portfolio2.0\\src\\common\\components\\buttonContactForm\\ButtonontactForm.tsx":"23","C:\\Incubator\\Progects\\Portfolio2.0\\src\\common\\components\\texareaContactForm\\TextareaContactForm.tsx":"24"},{"size":458,"mtime":1681313946181,"results":"25","hashOfConfig":"26"},{"size":452,"mtime":1611686192009,"results":"27","hashOfConfig":"26"},{"size":502,"mtime":1681316173940,"results":"28","hashOfConfig":"26"},{"size":510,"mtime":1610524667623,"results":"29","hashOfConfig":"26"},{"size":1032,"mtime":1653239256700,"results":"30","hashOfConfig":"26"},{"size":5095,"mtime":1681309846757,"results":"31","hashOfConfig":"26"},{"size":656,"mtime":1653288909511,"results":"32","hashOfConfig":"26"},{"size":777,"mtime":1647338058678,"results":"33","hashOfConfig":"26"},{"size":2174,"mtime":1653288392007,"results":"34","hashOfConfig":"26"},{"size":847,"mtime":1647338542244,"results":"35","hashOfConfig":"26"},{"size":1520,"mtime":1647339475533,"results":"36","hashOfConfig":"26"},{"size":1851,"mtime":1647339946320,"results":"37","hashOfConfig":"26"},{"size":1015,"mtime":1647338720800,"results":"38","hashOfConfig":"26"},{"size":243,"mtime":1653288812855,"results":"39","hashOfConfig":"26"},{"size":1415,"mtime":1653238647976,"results":"40","hashOfConfig":"26"},{"size":355,"mtime":1647337546485,"results":"41","hashOfConfig":"26"},{"size":588,"mtime":1647338509057,"results":"42","hashOfConfig":"26"},{"size":479,"mtime":1647339497119,"results":"43","hashOfConfig":"26"},{"size":608,"mtime":1647340440043,"results":"44","hashOfConfig":"26"},{"size":528,"mtime":1647337916381,"results":"45","hashOfConfig":"26"},{"size":2256,"mtime":1647338672962,"results":"46","hashOfConfig":"26"},{"size":425,"mtime":1647337219914,"results":"47","hashOfConfig":"26"},{"size":270,"mtime":1647337205535,"results":"48","hashOfConfig":"26"},{"size":422,"mtime":1647337513000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"11i9mwy",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Incubator\\Progects\\Portfolio2.0\\src\\index.tsx",["105"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { HashRouter, BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["106","107"],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\redux\\store.ts",["108"],"import { applyMiddleware, combineReducers, createStore } from \"redux\"\nimport thunkMiddleware from \"redux-thunk\"\nimport {newReducer} from \"./newReducer\"\n\n\nlet redusers = combineReducers (\n    {\n        new: newReducer\n    }\n)\n\ntype RedusersType = typeof redusers\nexport type AppStateType = ReturnType<RedusersType>\nlet state:AppStateType;\n\nexport let store = createStore (redusers, applyMiddleware (thunkMiddleware))\n// @ts-ignore\n\nwindow.store = store;","C:\\Incubator\\Progects\\Portfolio2.0\\src\\App.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\redux\\newReducer.ts",["109"],"import {Dispatch} from 'redux'\r\n\r\nlet initialState: initialStateType  = {}\r\n\r\nexport let newReducer = (state: initialStateType  = initialState, action: ActionType): initialStateType  => {\r\n    switch (action.type) {\r\n        case \"NEW-TASK\": \r\n            return state         \r\n           \r\n        default: return state;\r\n    }\r\n}\r\n// actions\r\nexport const newAC = () => ({ type: \"NEW-TASK\"} as const) \r\n \r\n//thunks\r\n\r\n//types\r\ntype initialStateType = {\r\n\r\n}\r\ntype ActionType = | ReturnType <typeof newAC> \r\n","C:\\Incubator\\Progects\\Portfolio2.0\\src\\HomePage.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\PrivacyPolicyPage.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\contacts\\Contacts.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\header\\Header.tsx",["110"],"import React from 'react';\nimport style from './Header.module.css';\nimport { Info } from '../info/Info';\n\nexport function Header(props: { menuModeToggle: () => void; currentPage: string }) {\n  return (\n    <div className={style.header}>\n      <a href='#' onClick={props.menuModeToggle}>\n        <div className={style.toggleHolder}>\n          <div id={style.toggle}>\n            <div className={style.menuLine}></div>\n          </div>\n        </div>\n      </a>\n\n      <div className={style.topPagination}>\n        <div className={style.currentPageNum}>{props.currentPage}</div>\n        <div className={style.pagination}></div>\n        <div className={style.totalPageNum}>05</div>\n      </div>\n      <div className={style.myInfo}>\n        <Info />\n      </div>\n    </div>\n  );\n}\n","C:\\Incubator\\Progects\\Portfolio2.0\\src\\scills\\Skills.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\main\\Main.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\progects\\Progects.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\experience\\Experience.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\nav\\Nav.tsx",["111","112","113"],"import style from './Nav.module.css';\nimport { Menu } from '../menu/Menu';\nimport { Link, animateScroll as scroll } from 'react-scroll';\n\nexport function Nav(props: { menuModeToggle: () => void; setCurrentPage: (currentPage: string) => void; currentPage: string; menuMode: boolean }) {\n  return (\n    <div className={props.menuMode ? `${style.nav} ${style.active}` : style.nav}>\n      <a href='#' onClick={props.menuModeToggle}>\n        <div className={style.toggleHolder}>\n          <div id={style.toggle} className={style.on}>\n            <div className={style.menuLine}></div>\n          </div>\n        </div>\n      </a>\n\n      <div className={style.topPagination}>\n        <div className={style.currentPageNum}>{props.currentPage}</div>\n        <div className={style.pagination}></div>\n        <div className={style.totalPageNum}>05</div>\n      </div>\n\n      <div className={style.menu}>\n        <Menu setCurrentPage={props.setCurrentPage} menuModeToggle={props.menuModeToggle} />\n      </div>\n    </div>\n  );\n}\n","C:\\Incubator\\Progects\\Portfolio2.0\\src\\common\\components\\button\\Button.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\contacts\\ContactForm.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\common\\components\\textBlock\\TextBlock.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\info\\Info.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\scills\\skill\\MySkill.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\progects\\progect\\MyProgect.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\experience\\myExperience\\MyExperience.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\menu\\Menu.tsx",["114"],"import style from './Menu.module.css';\nimport { Link } from 'react-scroll';\n\nexport function Menu(props: { setCurrentPage: (currentPage: string) => void; menuModeToggle: () => void }) {\n  const active = (to: string) => {\n    alert(to);\n  };\n\n  return (\n    <div className={style.menu}>\n      <div>\n        <Link\n          activeClass={style.active}\n          onSetActive={() => {\n            props.setCurrentPage('01');\n          }}\n          to='mainBlock'\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n          hashSpy={true}\n          onClick={props.menuModeToggle}\n        >\n          Home\n        </Link>\n      </div>\n      <div>\n        <Link\n          activeClass={style.active}\n          onSetActive={() => {\n            props.setCurrentPage('02');\n          }}\n          to='skillsBlock'\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n          hashSpy={true}\n          onClick={props.menuModeToggle}\n        >\n          Skills\n        </Link>\n      </div>\n      <div>\n        <Link\n          activeClass={style.active}\n          onSetActive={() => {\n            props.setCurrentPage('03');\n          }}\n          to='progectsBlock'\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n          hashSpy={true}\n          onClick={props.menuModeToggle}\n        >\n          Progects\n        </Link>\n      </div>\n      <div>\n        <Link\n          activeClass={style.active}\n          onSetActive={() => {\n            props.setCurrentPage('04');\n          }}\n          to='experienceBlock'\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n          hashSpy={true}\n          onClick={props.menuModeToggle}\n        >\n          Experience\n        </Link>\n      </div>\n      <div>\n        <Link\n          activeClass={style.active}\n          onSetActive={() => {\n            props.setCurrentPage('05');\n          }}\n          to='contactsBlock'\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n          hashSpy={true}\n          onClick={props.menuModeToggle}\n        >\n          Contacts\n        </Link>\n      </div>\n    </div>\n  );\n}\n","C:\\Incubator\\Progects\\Portfolio2.0\\src\\common\\components\\inputContactForm\\InputContactForm.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\common\\components\\buttonContactForm\\ButtonontactForm.tsx",[],"C:\\Incubator\\Progects\\Portfolio2.0\\src\\common\\components\\texareaContactForm\\TextareaContactForm.tsx",[],{"ruleId":"115","severity":1,"message":"116","line":7,"column":10,"nodeType":"117","messageId":"118","endLine":7,"endColumn":20},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"115","severity":1,"message":"123","line":14,"column":5,"nodeType":"117","messageId":"118","endLine":14,"endColumn":23},{"ruleId":"115","severity":1,"message":"124","line":1,"column":9,"nodeType":"117","messageId":"118","endLine":1,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":8,"column":7,"nodeType":"127","endLine":8,"endColumn":50},{"ruleId":"115","severity":1,"message":"128","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":14},{"ruleId":"115","severity":1,"message":"129","line":3,"column":33,"nodeType":"117","messageId":"118","endLine":3,"endColumn":39},{"ruleId":"125","severity":1,"message":"126","line":8,"column":7,"nodeType":"127","endLine":8,"endColumn":50},{"ruleId":"115","severity":1,"message":"130","line":5,"column":9,"nodeType":"117","messageId":"118","endLine":5,"endColumn":15},"@typescript-eslint/no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["131"],"no-negated-in-lhs",["132"],"'state' is defined but never used.","'Dispatch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'scroll' is defined but never used.","'active' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]